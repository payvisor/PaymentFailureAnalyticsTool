input {
  http {
    port => 5001
    add_field => {
      "input_type" => "http"
    }
  }
  s3 {
    access_key_id => "AKIA5EYMCTBEIIDJKGHJ"
    secret_access_key => "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"
    region => "ap-south-1"
    bucket => "payvisor-logstash-files"
    prefix => "server-logs/paymentsData/"
    add_field => {
      "input_type" => "s3_paymentsData"
    }
  }
  s3 {
    access_key_id => "AKIA5EYMCTBEIIDJKGHJ"
    secret_access_key => "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"
    region => "ap-south-1"
    bucket => "payvisor-logstash-files"
    prefix => "server-logs/javaErrors/"
    codec => multiline {
      pattern => "^%{CATALINA_DATESTAMP}"
      negate => true
      what => "previous"
      auto_flush_interval => 5
    }
    add_field => {
      "input_type" => "s3_javaErrors"
    }
  }
  s3 {
    access_key_id => "AKIA5EYMCTBEIIDJKGHJ"
    secret_access_key => "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"
    region => "ap-south-1"
    bucket => "payvisor-logstash-files"
    prefix => "server-logs/applicationLogs/"
    add_field => {
      "input_type" => "s3_applicationLogs"
    }
  }
  jdbc {
    jdbc_connection_string => "jdbc:mysql://payvisordb.ce47grpolldi.ap-south-1.rds.amazonaws.com:3306/payvisor?useSSL=false&serverTimezone=UTC"
    jdbc_user => "admin"
    jdbc_password => "Payvisor.123"
    jdbc_driver_library => "/var/lib/logstash/mysql-connector-java-8.0.26.jar"
    jdbc_driver_class => "com.mysql.jdbc.Driver"
    schedule => "* * * * *"
    lowercase_column_names => false
    clean_run => false
    statement => "SELECT PaymentsDataID,TransactionID,FirstName,LastName,EmailID,Address,Country,Amount,Currency,PaymentMethod,PaymentLocation,TransactionStatus,FailureReason,ErrorCode,TransactionDateTime FROM PaymentsData where PaymentsDataID > :sql_last_value"
    use_column_value => true
    tracking_column => "PaymentsDataID"
    jdbc_paging_enabled => true
    jdbc_page_size => 10000
    add_field => {
      "input_type" => "jdbc"
    }
  }
}

filter {
  if [input_type]=="http" and [url][path] =~ "paymentsData" and [http][method] =~ "POST" and [transaction][status][code]=="Failed" {
    date {
      match => ["[transaction][status][datetime]","yyyy-MM-dd HH:mm:ss"]
      target => "transactionDateTime"
    }
    mutate {
      rename => {
        "[transaction][id]" => "transactionID"
        "[transaction][details][firstName]" => "firstName"
        "[transaction][details][lastName]" => "lastName"
        "[transaction][details][emailId]" => "emailID"
        "[transaction][details][address][country]" => "country"
        "[transaction][amount][value]" => "amount"
        "[transaction][amount][currency]" => "currency"
        "[transaction][payment][method]" => "paymentMethod"
        "[transaction][payment][location]" => "paymentLocation"
        "[transaction][status][code]" => "transactionStatus"
        "[transaction][payment][failureReason]" => "failureReason"
      }
      remove_field => ["user_agent","http","@version","url","host","transaction","event"]
      convert => {
        "Amount" => "integer"
      }
    }
  }
  else if [input_type]=="jdbc" and [TransactionStatus] == "Failed" {
    mutate {
      rename => {
        "[TransactionID]" => "transactionID"
        "[FirstName]" => "firstName"
        "[LastName]" => "lastName"
        "[EmailID]" => "emailID"
        "[Country]" => "country"
        "[Amount]" => "amount"
        "[Currency]" => "currency"
        "[TransactionStatus]" => "transactionStatus"
        "[PaymentMethod]" => "paymentMethod"
        "[PaymentLocation]" => "paymentLocation"
        "[FailureReason]" => "failureReason"
        "[TransactionDateTime]" => "transactionDateTime"
      }
      remove_field => ["PaymentsDataID","ErrorCode","jdbc","@version","Address"]
    }
  }
  else if [input_type]=="s3_paymentsData" or [input_type]=="paymentsData" {
    grok {
      pattern_definitions => {
        "MYDATETIME" => "%{YEAR}-%{MONTHNUM}-%{MONTHDAY} %{HOUR}:%{MINUTE}:%{SECOND}"
      }
      match => {
        "message" => "%{MYDATETIME:timestamp}\s\s%{WORD:transactionID}\s\s%{WORD:firstName}\s\s%{WORD:lastName}\s\s%{EMAILADDRESS:emailID}\s\s%{GREEDYDATA:greedy1}\s\s%{NUMBER:amount}\s\s%{WORD:currency}\s\s%{GREEDYDATA:greedy2}\s\s%{WORD:ErrorCode}\s\s%{MYDATETIME:TxnDateTime}"
      }
    }
    date {
      match => ["TxnDateTime","yyyy-MM-dd HH:mm:ss"]
      target => "transactionDateTime"
    }
    mutate {
      split => {
        "greedy1" => "  "
      }
      split => {
        "greedy2" => "  "
      }
      add_field => {
        "country" => "%{[greedy1][1]}"
        "paymentMethod" => "%{[greedy2][0]}"
        "paymentLocation" => "%{[greedy2][1]}"
        "transactionStatus" => "%{[greedy2][2]}"
        "failureReason" => "%{[greedy2][3]}"
      }
      convert => {
        "amount" => "integer"
      }
      remove_field => ["host","greedy1","greedy2","event","@version","ErrorCode","timestamp","message","log","TxnDateTime"]
    }
    if [transactionStatus] == "Success" {
      drop {
      }
    }
  }
  else if [input_type]=="s3_javaErrors" or [input_type]=="javaErrors" {
    grok {
      match => {
        "message" => "%{CATALINA_DATESTAMP:timestamp} %{LOGLEVEL:level} %{JAVACLASS:class} %{WORD:failureReason}:%{GREEDYDATA:rest}"
      }
    }
    date {
      match => ["timestamp","MMM dd, yyyy H:mm:ss a"]
      target => "transactionDateTime"
    }
    mutate {
      add_field => {
        "amount" => "0"
      }
      convert => {
        "amount" => "integer"
      }
      remove_field => ["level","rest","host","event","@version","class","message","log","tags","timestamp"]
    }
  }
  else if [input_type]=="s3_applicationLogs" or [input_type]=="applicationLogs" {
    grok {
      pattern_definitions => {
        "MYDATETIME" => "%{YEAR}-%{MONTHNUM}-%{MONTHDAY} %{HOUR}:%{MINUTE}:%{SECOND}"
      }
      match => {
        "message" => "%{MYDATETIME:timestamp} - %{LOGLEVEL:level} - %{WORD:class} - %{GREEDYDATA:greedy1} %{NUMBER:transactionID}"
      }
    }
    if [level] == "ERROR" {
      date {
        match => ["timestamp","yyyy-MM-dd HH:mm:ss"]
        target => "transactionDateTime"
      }
      grok {
        pattern_definitions => {
          "MYDATETIME" => "%{YEAR}-%{MONTHNUM}-%{MONTHDAY} %{HOUR}:%{MINUTE}:%{SECOND}"
        }
        match => {
          "message" => "%{GREEDYDATA:greedy2} Reason: %{GREEDYDATA:failureReason}."
        }
      }
      mutate {
        add_field => {
          "amount" => "0"
        }
        convert => {
          "amount" => "integer"
        }
        remove_field => ["greedy1","host","log","@version","level","class","event","greedy2","message","timestamp"]
        gsub => [
        "failureReason", ".$", ""
        ]
      }
    }
    else {
      drop {
      }
    }
  }
  else {
    drop {
    }
  }
}

output {
  file {
    path => "output/payVisor_log_common_%{+yyyy-MM-dd}.json"
  }
  file {
    path => "output/payVisor_log_%{input_type}_%{+yyyy-MM-dd}.json"
  }
  http {
    http_method => "post"
    url => "http://paytrack-alb-812298353.ap-south-1.elb.amazonaws.com/predict_bucket"
    format => "json"
  }
  s3 {
    access_key_id => "AKIA5EYMCTBEIIDJKGHJ"
    secret_access_key => "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"
    region => "ap-south-1"
    bucket => "payvisor-logstash-files"
    codec => "json_lines"
    prefix => "processed-files/%{+YYYY-MM-dd}/"
    additional_settings => {
      "force_path_style" => true
      "follow_redirects" => false
    }
    size_file => 500000
    time_file => 86400
    rotation_strategy => "size_and_time"
  }
}